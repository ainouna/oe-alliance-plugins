<provider>
	<name>Canal+ Esp</name>
	<streamtype>dvbs</streamtype>
	<protocol>nolcn</protocol>
	<transponder
		orbital_position="192"
		frequency="10758000"
		symbol_rate="22000000"
		polarization="1"
		fec_inner="4"
		inversion="2"
		system="0"
		modulation="1"
		roll_off="0"
		pilot="2"
	/>
	<sections>
		<section number="1">Canal+ Esp</section>
	</sections>
	<servicehacks>
<![CDATA[
try:
	first_loop
except:
	first_loop = True
	
if first_loop:
	import re
	first_loop = False
	avoid = []
	sort_list_tv = []
	sort_list_radio = []
	for key in tmp_services_dict:
		x = tmp_services_dict[key]
		if x["service_name"] in avoid or x["service_name"] in ('', 'Unknown') or x["service_name"].lower().startswith('test'):
			tmp_services_dict[key]["numbers"][0] = -1
			continue
		avoid.append(x["service_name"])
		if x['service_type'] in DvbScanner.VIDEO_ALLOWED_TYPES:
			sort_list_tv.append((x["numbers"][0], re.sub('^(?![a-z])', 'zzzzz', x['service_name'].lower())))
		elif x['service_type'] in DvbScanner.AUDIO_ALLOWED_TYPES:
			sort_list_radio.append((x["numbers"][0], re.sub('^(?![a-z])', 'zzzzz', x['service_name'].lower())))
		else:
			tmp_services_dict[key]["numbers"][0] = -1
	sort_list_tv = sorted(sort_list_tv, key=lambda listItem: listItem[1])
	sort_list_radio = sorted(sort_list_radio, key=lambda listItem: listItem[1])
	LCN_list_tv = [x[0] for x in sort_list_tv]
	LCN_list_radio = [x[0] for x in sort_list_radio]
	LCN_list_tv.insert(0, None) # add fake entry at index 0, so channel numbers start from 1
	LCN_list_radio.insert(0, None) # add fake entry at index 0, so channel numbers start from 1
	del sort_list_tv
	del sort_list_radio

if service['service_type'] in DvbScanner.VIDEO_ALLOWED_TYPES and service["numbers"][0] in LCN_list_tv:
	service["numbers"][0] = LCN_list_tv.index(service["numbers"][0])
elif service['service_type'] in DvbScanner.AUDIO_ALLOWED_TYPES and service["numbers"][0] in LCN_list_radio:
	service["numbers"][0] = LCN_list_radio.index(service["numbers"][0])
else:
	skip = True
]]>
	</servicehacks>
</provider>
